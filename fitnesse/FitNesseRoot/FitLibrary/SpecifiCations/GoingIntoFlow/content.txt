!2 If we start in non-flow, when we hit a !-DoFixture-! table later in the storytest, it will switch into flow
That first !-DoFixture-! will run the rest of the storytest, in flow.

The second !-DoFixture-!  does not take over flow.

!**< def
!define test (!|fit.specify.MyColumnFixture|
|x|x?|
|0|0|
|1|1|

!|fitlibrary.specify.DoFixtureFlowUnderTest|

|int property|is|2|

!|fitlibrary.specify.DoFixtureUnderTest|

|int property|is|2|
)
**!
|!-fitlibrary.spec.SpecifyFixture-!|
|${test}|!-<table border="1" cellspacing="0">
<tr><td colspan="2">fit.specify.MyColumnFixture</td>
</tr>
<tr><td>x</td>
<td>x?</td>
</tr>
<tr><td>0</td>
<td class="pass">0</td>
</tr>
<tr><td>1</td>
<td class="pass">1</td>
</tr>
</table>
<br><table border="1" cellspacing="0">
<tr><td>fitlibrary.specify.DoFixtureFlowUnderTest</td>
</tr>
</table>
<br><table border="1" cellspacing="0">
<tr><td>int property</td>
<td>is</td>
<td class="pass">2</td>
</tr>
</table>
<br><table border="1" cellspacing="0">
<tr><td>fitlibrary.specify.DoFixtureUnderTest</td>
</tr>
</table>
<br><table border="1" cellspacing="0">
<tr><td>int property</td>
<td>is</td>
<td class="pass">2</td>
</tr>
</table>-!|
